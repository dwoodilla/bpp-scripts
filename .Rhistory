BEACO2N_DPW_link = "http://128.32.208.8/node/276/measurements_all/csv?name=Department%20of%20Public%20Works&interval=60&variables=co_wrk_aux&start=2025-05-01%2000:00:00&end=2025-06-01%2000:00:00&chart_type=measurement"
BEACO2N_DPW = read.csv(BEACO2N_DPW_link)
View(BEACO2N_DPW)
QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
req_url_query(
sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
start_date = "2025-05-01", # Start and end dates; no times as per API docs
end_date = "2025-05-31",
period = "1h" #Specify 1-hour resolution
) %>%
req_perform() # Actually make the HTTP request
source("~/Desktop/summer25/bpp-scripts/api-test-script.R", echo = TRUE)
source("~/Desktop/summer25/bpp-scripts/api-test-script.R", echo = TRUE)
source("~/Desktop/summer25/bpp-scripts/api-test-script.R", echo = TRUE)
View(QuantAQ_DPW)
source("~/Desktop/summer25/bpp-scripts/api-test-script.R", echo = TRUE)
View(BEACO2N_DPW)
source("~/Desktop/summer25/bpp-scripts/api-test-script.R", echo = TRUE)
source("~/Desktop/summer25/bpp-scripts/api-test-script.R", echo = TRUE)
QuantAQ_DPW$datetime = as.POSIXct(QuantAQ_DPW$datetime, tz="GMT", format="%FT%T%z")
source("~/Desktop/summer25/bpp-scripts/api-test-script.R", echo = TRUE)
QuantAQ_DPW$datetime[1]
source("~/Desktop/summer25/bpp-scripts/api-test-script.R", echo = TRUE)
# **See ReadMe for QuantAQ's R API here: https://github.com/quant-aq/r-quantaq/blob/main/README.md**
# See docs for QuantAQ's HTTP API here: https://docs.quant-aq.com/software-apis-and-libraries/quantaq-cloud-api
rm(list=ls()) # clear the R environment between script runs
library(jsonlite)
# install.packages("devtools") # uncomment to install devtools package, needed to install R API
# devtools::install_github(repo="quant-aq/r-quantaq") # Uncomment to install QuantAQ's R API from GitHub.
# install.packages("httr2") # uncomment to install httr2, needed to use QuantAQ's HTTP API.
library(QuantAQAPIClient)
library(httr2)
API_KEY = "6XB3KQVJ62BKQR3DVKX1MMGR"
setup_client(api_key = API_KEY)
# Get all data from QuantAQ sensor at DPW for the month of May with 1-hour resolution
# Apparently the R API has no method to get resampled data (needed for 1h resolution), so this must be done manually using CLI + httr2
# Make an HTTP request using httr2, following HTTP API specifications.
QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
req_url_query(
sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
start_date = "2025-05-01", # Start and end dates; no times as per API docs
end_date = "2025-05-31",
period = "1h" #Specify 1-hour resolution
) %>%
req_perform() # Actually make the HTTP request
QuantAQ_DPW = resp_body_json(QuantAQ_DPW) # Convert the received JSON into a list of lists of labeled data (which needs to be converted to a dataframe)
QuantAQ_DPW = do.call(rbind, lapply(QuantAQ_DPW$data, as.data.frame)) # Store QuantAQ_DPW as a data frame
# Get CO data from BEACO2N sensor at DPW for the month of May with 1-hour resolution
# This URL came from manually specifying parameters for BEACO2N node and dataset at below URL:
# http://128.32.208.8/map/?ids=276&variables=co_wrk_aux&interval=60&chart_type=measurement&start=2025-05-01%2000:00:00&end=2025-06-01%2000:00:00&show_locations=true
BEACO2N_DPW_link = "http://128.32.208.8/node/276/measurements_all/csv?name=Department%20of%20Public%20Works&interval=60&variables=co_wrk_aux&start=2025-05-01%2000:00:00&end=2025-06-01%2000:00:00&chart_type=measurement"
BEACO2N_DPW = read.csv(BEACO2N_DPW_link)
# Clean data by removing impertinent fields. Also aligns names of dataframe cols.
QuantAQ_DPW = subset(QuantAQ_DPW, select = c("period_start_utc", "co"))
colnames(QuantAQ_DPW)[colnames(QuantAQ_DPW)=="period_start_utc"] = "datetime"
BEACO2N_DPW = subset(BEACO2N_DPW, select = c("datetime", "co_wrk_aux"))
c
colnames(BEACO2N_DPW)[colnames(BEACO2N_DPW)=="co_wrk_aux"] = "co"
help.search("strptime")
QuantAQ_DPW$datetime = as.POSIXct(QuantAQ_DPW$datetime, tz="GMT", format="%FT%T", tz="GMT")
source("~/Desktop/summer25/bpp-scripts/api-test-script.R", echo = TRUE)
traceback()
source("~/Desktop/summer25/bpp-scripts/api-test-script.R", echo = TRUE)
QuantAQ_DPW$datetime <- date_time_parse_RFC_3339(
QuantAQ_DPW$datetime,
offset = "%Ez"  # supports "+00:00" syntax
)
library(clock)
install.packages("clock")
library(clock)
info
R.Version()
remove.packages(rlang)
remove.packages("rlang")
install.packages("rlang")
library(clock)
QuantAQ_DPW$datetime <- date_time_parse_RFC_3339(
QuantAQ_DPW$datetime,
offset = "%Ez"  # supports "+00:00" syntax
)
BEACO2N_DPW$datetime = as.POSIXct(BEACO2N_DPW$datetime, tz="UTC") # the default format in this case should align with given format
source("~/Desktop/summer25/bpp-scripts/api-test-script.R", echo = TRUE)
source("~/Desktop/summer25/bpp-scripts/api-test-script.R", echo = TRUE)
QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
req_url_query(
sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
start_date = "2025-04-30T20:00:00",
end_date = "2025-05-31T20:00:00",
period = "1h" #Specify 1-hour resolution
) %>%
req_perform() # Actually make the HTTP request
rlang::last_trace()
rlang::last_trace(drop = FALSE)
QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
req_url_query(
sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
start_date = "2025-04-30T20:00:00Z",
end_date = "2025-05-31T20:00:00Z",
period = "1h" #Specify 1-hour resolution
) %>%
req_perform() # Actually make the HTTP request
QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
req_url_query(
sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
start_date = "2025-04-30",
end_date = "2025-05-31",
period = "1h" #Specify 1-hour resolution
) %>%
req_perform() # Actually make the HTTP request
QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
req_url_query(
sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
start_date = "2025-05-01",
end_date = "2025-05-31",
period = "1h" #Specify 1-hour resolution
) %>%
req_perform() # Actually make the HTTP request
QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
req_url_query(
sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
start_date = "2025-04-30",
end_date = "2025-05-31",
period = "1h" #Specify 1-hour resolution
) %>%
req_perform() # Actually make the HTTP request
QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
req_url_query(
sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
start_date = "2025-05-02",
end_date = "2025-05-31",
period = "1h" #Specify 1-hour resolution
) %>%
req_perform() # Actually make the HTTP request
QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
req_url_query(
sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
start_date = "2025-04-28",
end_date = "2025-05-31",
period = "1h" #Specify 1-hour resolution
) %>%
req_perform() # Actually make the HTTP request
QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
req_url_query(
sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
start_date = "2025-05-01T00:00:00",
end_date = "2025-05-31",
period = "1h" #Specify 1-hour resolution
) %>%
req_perform() # Actually make the HTTP request
QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
req_url_query(
sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
start_date = "2025-05-01T00:00:00Z",
end_date = "2025-05-31",
period = "1h" #Specify 1-hour resolution
) %>%
req_perform() # Actually make the HTTP request
QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
req_url_query(
sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
start_date = "2025-05-01",
start_time = "00:00:00"
end_date = "2025-05-31",
QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
req_url_query(
sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
start_date = "2025-05-01",
start_time = "00:00:00",
end_date = "2025-05-31",
end_time = "00:00:00",
period = "1h" #Specify 1-hour resolution
) %>%
req_perform() # Actually make the HTTP request
QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
req_url_query(
sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
start_date = "2025-05-01",
start_time = "00:00:00-04:00",
end_date = "2025-05-31",
end_time = "00:00:00-04:00",
period = "1h" #Specify 1-hour resolution
) %>%
req_perform() # Actually make the HTTP request
QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
req_url_query(
sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
start_date = "2025-05-01",
start_time = "00:00:00+00:00",
end_date = "2025-05-31",
end_time = "00:00:00+00:00",
period = "1h" #Specify 1-hour resolution
) %>%
req_perform() # Actually make the HTTP request
QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
req_url_query(
sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
start_date = "2025-05-01",
start_time = "00:00:00-04:00",
end_date = "2025-05-31",
end_time = "00:00:00-04:00",
period = "1h" #Specify 1-hour resolution
) %>%
req_perform() # Actually make the HTTP request
QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
req_url_query(
sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
start_date = "2025-05-01",
start_time = "00:00:00+04:00",
end_date = "2025-05-31",
end_time = "00:00:00+04:00",
period = "1h" #Specify 1-hour resolution
) %>%
req_perform() # Actually make the HTTP request
QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
req_url_query(
sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
start_date = "2025-04-01",
start_time = "00:00:00+04:00",
end_date = "2025-05-31",
end_time = "00:00:00+04:00",
period = "1h" #Specify 1-hour resolution
) %>%
req_perform() # Actually make the HTTP request
source("~/Desktop/summer25/bpp-scripts/api-test-script.R", echo = TRUE)
source("~/Desktop/summer25/bpp-scripts/api-test-script.R", echo = TRUE)
plot(BEACO2N_DPW$datetime, BEACO2N_DPW$co)
source("~/Desktop/summer25/bpp-scripts/api-test-script.R", echo = TRUE)
print(t.test(merged_DPW$co_1, merged_df$co_2, paired = TRUE))
print(t.test(merged_DPW$co_1, merged_DPW$co_2, paired = TRUE))
View(merged_DPW)
get_data(QUANTAQ_DPW_SN, limit=NULL, start="2025-05-01", stop="2025-05-31", filter=NULL, sort=NULL, raw=TRUE)
QUANTAQ_DPW_SN = "MOD-00811"
get_data(QUANTAQ_DPW_SN, limit=NULL, start="2025-05-01", stop="2025-05-31", filter=NULL, sort=NULL, raw=TRUE)
seq(ymd(2025-05-01), ymd(2025-05-31), by="day")
seq(from=as.Date("2025-05-01"), to=as.Date("2025-05-31"), by="day")
QuantAQ_DPW = list()
for (datestr in seq(from=as.Date("2025-05-01"), to=as.Date("2025-05-31"), by="day")) {
QuantAQ_DPW.append(resp_body_json(request(paste0("https://api.quant-aq.com/v1/devices/", QUANTAQ_DPW_SN, "/data-by-date/", datestr)) %>%
req_auth_basic(API_KEY, "") %>%
req_perform()))
}
QuantAQ_DPW = list()
for (datestr in seq(from=as.Date("2025-05-01"), to=as.Date("2025-05-31"), by="day")) {
datum = resp_body_json(request(paste0("https://api.quant-aq.com/v1/devices/", QUANTAQ_DPW_SN, "/data-by-date/", datestr)) %>%
req_auth_basic(API_KEY, "") %>%
req_perform()
)
QuantAQ_DPW = append(QuantAQ_DPW, list(datum))
}
QuantAQ_DPW = list()
for (datestr in seq(from=as.Date("2025-05-01"), to=as.Date("2025-05-31"), by="day")) {
datestr
datum = resp_body_json(request(paste0("https://api.quant-aq.com/v1/devices/", QUANTAQ_DPW_SN, "/data-by-date/", datestr)) %>%
req_auth_basic(API_KEY, "") %>%
req_perform()
)
QuantAQ_DPW = append(QuantAQ_DPW, list(datum))
}
seq(from=as.Date("2025-05-01"), to=as.Date("2025-05-31"), by="day")
for (datestr in seq(from=as.Date("2025-05-01"), to=as.Date("2025-05-31"), by="day")) {
print(datestr)
}
QuantAQ_DPW = list()
for (datestr in seq(from=as.Date("2025-05-01"), to=as.Date("2025-05-31"), by="day")) {
datestr
datum = resp_body_json(request(paste0("https://api.quant-aq.com/v1/devices/", QUANTAQ_DPW_SN, "/data-by-date/", as.string(datestr))) %>%
req_auth_basic(API_KEY, "") %>%
req_perform()
)
QuantAQ_DPW = append(QuantAQ_DPW, list(datum))
}
QuantAQ_DPW = list()
for (datestr in seq(from=as.Date("2025-05-01"), to=as.Date("2025-05-31"), by="day")) {
datestr
datum = resp_body_json(request(paste0("https://api.quant-aq.com/v1/devices/", QUANTAQ_DPW_SN, "/data-by-date/", as.character(datestr))) %>%
req_auth_basic(API_KEY, "") %>%
req_perform()
)
QuantAQ_DPW = append(QuantAQ_DPW, list(datum))
}
rlang::last_trace()
rlang::last_trace(drop = FALSE)
resp <- request(
paste0(
"https://api.quant-aq.com/v1/devices/",
QUANTAQ_DPW_SN,
"/data-by-date/2025-05-15"
)
) %>%
req_auth_basic(API_KEY, "") %>%
req_perform()
resp
resp_body_json(resp)
resp <- request(
paste0(
"https://api.quant-aq.com/v1/devices/",
QUANTAQ_DPW_SN,
"/data-by-date/2025-05-15"
)
) %>%
req_auth_basic(API_KEY, "") %>%
req_perform()
resp_body_json(resp)
debugSource("~/Desktop/summer25/bpp-scripts/api-test-script.R", echo = TRUE)
datestr
debugSource("~/Desktop/summer25/bpp-scripts/api-test-script.R", echo = TRUE)
debugSource("~/Desktop/summer25/bpp-scripts/api-test-script.R", echo = TRUE)
datestr
as.character(datestr)
QuantAQ_DPW = list()
datelist = seq(from=as.Date("2025-05-01"), to=as.Date("2025-05-31"), by="day")
for (i in len(datelist)) {
datum = resp_body_json(request(paste0("https://api.quant-aq.com/v1/devices/", QUANTAQ_DPW_SN, "/data-by-date/", datelist[i])) %>%
req_auth_basic(API_KEY, "") %>%
req_perform()
)
QuantAQ_DPW = append(QuantAQ_DPW, list(datum))
}
QuantAQ_DPW = list()
datelist = seq(from=as.Date("2025-05-01"), to=as.Date("2025-05-31"), by="day")
for (i in length(datelist)) {
datum = resp_body_json(request(paste0("https://api.quant-aq.com/v1/devices/", QUANTAQ_DPW_SN, "/data-by-date/", datelist[i])) %>%
req_auth_basic(API_KEY, "") %>%
req_perform()
)
QuantAQ_DPW = append(QuantAQ_DPW, list(datum))
}
View(QuantAQ_DPW)
QuantAQ_DPW = list()
datelist = seq(from=as.Date("2025-05-01"), to=as.Date("2025-05-31"), by="day")
for (i in length(datelist)) {
datum = resp_body_json(request(paste0("https://api.quant-aq.com/v1/devices/", QUANTAQ_DPW_SN, "/data-by-date/", datelist[i])) %>%
req_auth_basic(API_KEY, "") %>%
req_perform()
)
QuantAQ_DPW = append(QuantAQ_DPW, list(datum))
}
QuantAQ_DPW = resp_body_json(QuantAQ_DPW) # Convert the received JSON into a list of lists of labeled data (which needs to be converted to a dataframe)
QuantAQ_DPW = list()
datelist = seq(from=as.Date("2025-05-01"), to=as.Date("2025-05-31"), by="day")
for (i in length(datelist)) {
datum = resp_body_json(request(paste0("https://api.quant-aq.com/v1/devices/", QUANTAQ_DPW_SN, "/data-by-date/", datelist[i])) %>%
req_auth_basic(API_KEY, "") %>%
req_perform()
)
QuantAQ_DPW = append(QuantAQ_DPW, list(datum))
}
# QuantAQ_DPW = resp_body_json(QuantAQ_DPW) # Convert the received JSON into a list of lists of labeled data (which needs to be converted to a dataframe)
QuantAQ_DPW = do.call(rbind, lapply(QuantAQ_DPW$data, as.data.frame)) # Store QuantAQ_DPW as a data frame
QuantAQ_DPW = list()
datelist = seq(from=as.Date("2025-05-01"), to=as.Date("2025-05-31"), by="day")
for (i in length(datelist)) {
datum = resp_body_json(request(paste0("https://api.quant-aq.com/v1/devices/", QUANTAQ_DPW_SN, "/data-by-date/", datelist[i])) %>%
req_auth_basic(API_KEY, "") %>%
req_perform()
)
QuantAQ_DPW = append(QuantAQ_DPW, list(datum))
}
View(QuantAQ_DPW)
QuantAQ_DPW = do.call(rbind, lapply(QuantAQ_DPW$data, as.data.frame)) # Store QuantAQ_DPW as a data frame
rm(list=ls())
datelist = seq(from=as.Date("2025-05-01"), to=as.Date("2025-05-31"), by="day")
QuantAQ_DPW_list = list(length=length(datelist))
for (i in seq_along(datelist)) {
res = resp_body_json(request(paste0("https://api.quant-aq.com/v1/devices/", QUANTAQ_DPW_SN, "/data-by-date/", datelist[i])) %>%
req_auth_basic(API_KEY, "") %>%
req_perform()
)
QuantAQ_DPW_list[i] = as.data.frame(res$data)
}
# **See ReadMe for QuantAQ's R API here: https://github.com/quant-aq/r-quantaq/blob/main/README.md**
# See docs for QuantAQ's HTTP API here: https://docs.quant-aq.com/software-apis-and-libraries/quantaq-cloud-api
rm(list=ls()) # clear the R environment between script runs
library(jsonlite)
# install.packages("devtools") # uncomment to install devtools package, needed to install R API
# devtools::install_github(repo="quant-aq/r-quantaq") # Uncomment to install QuantAQ's R API from GitHub.
# install.packages("httr2") # uncomment to install httr2, needed to use QuantAQ's HTTP API.
library(QuantAQAPIClient)
library(httr2)
library(clock)
library(dplyr)
API_KEY = "6XB3KQVJ62BKQR3DVKX1MMGR"
QUANTAQ_DPW_SN = "MOD-00811"
datelist = seq(from=as.Date("2025-05-01"), to=as.Date("2025-05-31"), by="day")
QuantAQ_DPW_list = list(length=length(datelist))
for (i in seq_along(datelist)) {
res = resp_body_json(request(paste0("https://api.quant-aq.com/v1/devices/", QUANTAQ_DPW_SN, "/data-by-date/", datelist[i])) %>%
req_auth_basic(API_KEY, "") %>%
req_perform()
)
QuantAQ_DPW_list[i] = as.data.frame(res$data)
}
QuantAQ_DPW = do.call(rbind, QuantAQ_DPW_list)
warnings()
# **See ReadMe for QuantAQ's R API here: https://github.com/quant-aq/r-quantaq/blob/main/README.md**
# See docs for QuantAQ's HTTP API here: https://docs.quant-aq.com/software-apis-and-libraries/quantaq-cloud-api
rm(list=ls()) # clear the R environment between script runs
library(jsonlite)
# install.packages("devtools") # uncomment to install devtools package, needed to install R API
# devtools::install_github(repo="quant-aq/r-quantaq") # Uncomment to install QuantAQ's R API from GitHub.
# install.packages("httr2") # uncomment to install httr2, needed to use QuantAQ's HTTP API.
library(QuantAQAPIClient)
library(httr2)
library(clock)
library(dplyr)
API_KEY = "6XB3KQVJ62BKQR3DVKX1MMGR"
QUANTAQ_DPW_SN = "MOD-00811"
setup_client(api_key = API_KEY)
# Get all data from QuantAQ sensor at DPW for the month of May with 1-hour resolution
# Apparently the R API has no method to get resampled data (needed for 1h resolution), so this must be done manually using CLI + httr2
# Make an HTTP request using httr2, following HTTP API specifications.
# QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
#   req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
#   req_url_query(
#     sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
#     start_date = "2025-05-01",
#     end_date = "2025-05-31",
#     start_time = "00:00:00+00:00",
#     end_time = "00:00:00+00:00",
#     period = "1h" #Specify 1-hour resolution
#   ) %>%
#   req_perform() # Actually make the HTTP request
# get_data(QUANTAQ_DPW_SN, limit=NULL, start="2025-05-01", stop="2025-05-31", filter=NULL, sort=NULL, raw=TRUE)
datelist = seq(from=as.Date("2025-05-01"), to=as.Date("2025-05-31"), by="day")
QuantAQ_DPW_list <- vector("list", length(datelist))
for (i in seq_along(datelist)) {
res <- request(paste0("https://api.quant-aq.com/v1/devices/", QUANTAQ_DPW_SN, "/data-by-date/", datelist[i])) %>%
req_auth_basic(API_KEY, "") %>%
req_perform() %>%
resp_body_json()
if (!is.null(res$data) && length(res$data) > 0) {
QuantAQ_DPW_list[[i]] <- as.data.frame(res$data)
} else {
message("No data on ", datelist[i])
QuantAQ_DPW_list[[i]] <- NULL
}
}
QuantAQ_DPW_list <- QuantAQ_DPW_list[!sapply(QuantAQ_DPW_list, is.null)]
QuantAQ_DPW <- dplyr::bind_rows(QuantAQ_DPW_list)
# **See ReadMe for QuantAQ's R API here: https://github.com/quant-aq/r-quantaq/blob/main/README.md**
# See docs for QuantAQ's HTTP API here: https://docs.quant-aq.com/software-apis-and-libraries/quantaq-cloud-api
rm(list=ls()) # clear the R environment between script runs
library(jsonlite)
# install.packages("devtools") # uncomment to install devtools package, needed to install R API
# devtools::install_github(repo="quant-aq/r-quantaq") # Uncomment to install QuantAQ's R API from GitHub.
# install.packages("httr2") # uncomment to install httr2, needed to use QuantAQ's HTTP API.
library(QuantAQAPIClient)
library(httr2)
library(clock)
library(dplyr)
API_KEY = "6XB3KQVJ62BKQR3DVKX1MMGR"
QUANTAQ_DPW_SN = "MOD-00811"
setup_client(api_key = API_KEY)
# Get all data from QuantAQ sensor at DPW for the month of May with 1-hour resolution
# Apparently the R API has no method to get resampled data (needed for 1h resolution), so this must be done manually using CLI + httr2
# Make an HTTP request using httr2, following HTTP API specifications.
# QuantAQ_DPW = request("https://api.quant-aq.com/v1/data/resampled") %>% # This is the URL which provides resampled data
#   req_auth_basic(API_KEY, "") %>% #Authenticate the request w/ API_KEY (no password so second arg is blank)
#   req_url_query(
#     sn = "MOD-00811", # Serial number of QuantAQ Node at DPW site
#     start_date = "2025-05-01",
#     end_date = "2025-05-31",
#     start_time = "00:00:00+00:00",
#     end_time = "00:00:00+00:00",
#     period = "1h" #Specify 1-hour resolution
#   ) %>%
#   req_perform() # Actually make the HTTP request
# get_data(QUANTAQ_DPW_SN, limit=NULL, start="2025-05-01", stop="2025-05-31", filter=NULL, sort=NULL, raw=TRUE)
datelist = seq(from=as.Date("2025-05-01"), to=as.Date("2025-05-31"), by="day")
QuantAQ_DPW_list <- vector("list", length(datelist))
for (i in seq_along(datelist)) {
res = get_data_by_date(QUANTAQ_DPW_SN, datelist[i], raw=TRUE)
}
View(res)
